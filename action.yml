name: 'Homework Setup'
description: 'Github Action to setup homework grading.'

inputs:
  min_commits:
    required: true
    default: 3

outputs:
  homework_name:
    value: ${{ steps.parse-name.outputs.homework_name }}

runs:
  using: "composite"
  steps:
    - name: Parse Homework Name
      id: parse-name
      shell: bash
      run: |
        echo ""
        echo "Working: $(pwd)"
        echo "Repository: ${GITHUB_REPOSITORY}"

        echo "::set-env name=MIN_COMMITS::${{ inputs.min_commits }}"

        if [[ ${GITHUB_REPOSITORY} =~ .+\/homework-([^-]+)-.+ ]]; then
          export HOMEWORK_NAME=${BASH_REMATCH[1]}
          echo "Homework Name: ${HOMEWORK_NAME}"

          echo "::set-env name=HOMEWORK_NAME::${HOMEWORK_NAME}"
          echo "::set-output name=homework_name::${HOMEWORK_NAME}"
          exit 0
        fi

        echo "::error ::Repository ${GITHUB_REPOSITORY} in an unexpected format; cannot parse."

    - name: Make Temporary Directory
      id: make-temporary
      shell: bash
      run: |
        TEMPLATE_DIR=$(mktemp -d ~/template-XXXX)
        echo "Temporary Directory: ${TEMPLATE_DIR}"
        echo "::set-env name=TEMPLATE_DIR::${TEMPLATE_DIR}"

    - name: Checkout Template Repository
      id: checkout-template
      shell: bash
      run: |
        TEMPLATE_REPO="https://github-actions:${{ github.token }}@github.com/usf-cs212-fall2020/homework-${HOMEWORK_NAME}-template.git"
        git clone --depth 1 "${TEMPLATE_REPO}" ${TEMPLATE_DIR}/template

    - name: Setup Clean Test Environment
      id: setup-test
      shell: bash
      run: |
        echo ""
        echo "Template Tests:"
        ls -CGR ${TEMPLATE_DIR}/template/${HOMEWORK_NAME}/src/test/

        rm -rf ${HOMEWORK_NAME}/src/test
        mv -fv ${TEMPLATE_DIR}/template/${HOMEWORK_NAME}/src/test ${HOMEWORK_NAME}/src/
        mv -fv ${TEMPLATE_DIR}/template/${HOMEWORK_NAME}/pom.xml ${HOMEWORK_NAME}/
        
    # do this before so the NUM_COMMITS is properly substituted
    # in the next step

    - name: Check Commit Count
      id: check-commits
      shell: bash
      run: |
        echo ""
        echo "Checking Commits..."

        git fetch --unshallow
        NUM_COMMITS=$(git rev-list --all --count)
        
        echo "::set-env name=NUM_COMMITS::${NUM_COMMITS}"        
        echo "Looked for ${COMMIT_COUNT} commits; found ${NUM_COMMITS}; ${MIN_COMMITS} required."

    # have to substitute all environment varaibles into the command files
    # since the autograder cannot access environment variables itself

    - name: Setup Test Commands
      id: setup-commands
      shell: bash
      run: |
        echo ""
        echo "Test Commands:"
        cp ${{ github.action_path }}/*.sh .
        ls -aCG *.sh

        for command_file in *.sh; do
          envsubst < ${command_file} > ${command_file}.txt
          mv ${command_file}.txt ${command_file}

          echo ""
          echo "Updated: ${command_file}"
          cat ${command_file}
        done
